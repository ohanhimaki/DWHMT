@page "/viewsource"
@using MudBlazor
@inject IDialogService DialogService
@inject AppStateService AppState

<h1>Source Data</h1>

<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OpenInputDialog">
    <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-1" /> Input Source Data
</MudButton>

@if (AppState.SourceTables.Any())
{
    @foreach (var table in AppState.SourceTables)
    {
        <MudExpansionPanel Text="@table.TableName" IsInitiallyExpanded="true">
            <MudTable Items="@table.Columns" Hover="true" Bordered="true">
                <HeaderContent>
                    <MudTh>Column Name</MudTh>
                    <MudTh>Example Data</MudTh>
                    <MudTh>Row Count</MudTh>
                    <MudTh>Unique Count</MudTh>
                    <MudTh>Null Count</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.ColumnName</MudTd>
                    <MudTd>@context.ExampleData</MudTd>
                    <MudTd>@context.RowCount</MudTd>
                    <MudTd>@context.UniqueCount</MudTd>
                    <MudTd>@context.NullCount</MudTd>
                </RowTemplate>
            </MudTable>
        </MudExpansionPanel>
    }
}
else
{
    <MudText>No source data loaded. Click the 'Input Source Data' button to begin.</MudText>
}

@code {
    private async Task OpenInputDialog()
    {
        var dialog = await DialogService.ShowAsync<InputSourceData>("Input Source Data",
            
            new DialogOptions { CloseOnEscapeKey = true, BackdropClick = false }
            );
        
        var result = await dialog.Result;
        
        if (!result.Canceled)
        {
            if (result.Data is List<SourceTable> processedTables)
            {
                await AppState.MergeSourceTables(processedTables);// SourceTables = processedTables;
                StateHasChanged(); // Refresh the UI
            }
        }
    }
}
