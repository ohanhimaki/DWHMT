
@page "/pastedata"
@using MudBlazor
@using System.Linq

<h1>Paste Source Data (Excel/Sheet Format)</h1>

<MudText>Paste your table data here (tab-separated columns, newline-separated rows, with the first row as headers):</MudText>
<MudTextField @bind-Value="PastedText" Lines="10" Variant="Variant.Outlined" Class="mb-4" />

<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ProcessPastedData">Process Data</MudButton>

@if (SourceTables.Any())
{
    <MudText Typo="Typo.h6" Class="mt-4">Source Tables:</MudText>
    @foreach (var table in SourceTables)
    {
        <MudText Typo="Typo.h6" Class="mt-2">Table: @table.TableName</MudText>
        <MudTable Items="@table.Rows" Hover="true" Bordered="true">
            <HeaderContent>
                @foreach (var header in table.Headers)
                {
                    <MudTh>@header</MudTh>
                }
            </HeaderContent>
            <RowTemplate>
                @foreach (var header in table.Headers)
                {
                    <MudTd>@context.Values.GetValueOrDefault(header)</MudTd>
                }
            </RowTemplate>
        </MudTable>

        <MudText Typo="Typo.subtitle1" Class="mt-2">Column Metadata:</MudText>
        @* <MudTable Items="@table.ColumnMetadata" Hover="true" Bordered="true"> *@
        @*     <HeaderContent> *@
        @*         <MudTh>Column Name</MudTh> *@
        @*         <MudTh>Data Example (Top 5)</MudTh> *@
        @*         <MudTh>Rows</MudTh> *@
        @*         <MudTh>Unique</MudTh> *@
        @*         <MudTh>Null</MudTh> *@
        @*         $1$ Add more metadata headers here if you calculate them #1# *@
        @*     </HeaderContent> *@
        @*     <RowTemplate> *@
        @*         <MudTd>@context.ColumnName</MudTd> *@
        @*         <MudTd>@string.Join(", ", context.Example.Take(5)) @(context.Example.Count > 5 ? "..." : "")</MudTd> *@
        @*         <MudTd>@context.Rows</MudTh> *@
        @*         <MudTd>@context.UniqueCount</MudTh> *@
        @*         <MudTd>@context.NullCount</MudTh> *@
        @*         $1$ Add more metadata display here #1# *@
        @*     </RowTemplate> *@
        @* </MudTable> *@
    }
}

@code {
    private string PastedText { get; set; } = "";
    private List<SourceTable> SourceTables { get; set; } = new List<SourceTable>();

    private class SourceColumnMetadata
    {
        public string ColumnName { get; set; }
        public List<string> Example { get; set; } = new List<string>();
        public int Rows { get; set; }
        public int UniqueCount { get; set; }
        public int NullCount { get; set; }
        public string? SourceSystem { get; set; } // Added Source System
        // Add other metadata properties here
    }

    private class SourceRow
    {
        public Dictionary<string, string> Values { get; set; } = new Dictionary<string, string>();
    }

    private class SourceTable
    {
        public string TableName { get; set; } // You might infer this or let the user name it later
        public List<string> Headers { get; set; } = new List<string>();
        public List<SourceRow> Rows { get; set; } = new List<SourceRow>();
        public List<SourceColumnMetadata> ColumnMetadata { get; set; } = new List<SourceColumnMetadata>();
    }

    private void ProcessPastedData()
    {
        SourceTables.Clear();

        if (!string.IsNullOrWhiteSpace(PastedText))
        {
            var lines = PastedText.Split(new[] { "\r\n", "\r", "\n" }, StringSplitOptions.RemoveEmptyEntries);

            if (lines.Any())
            {
                var headers = lines.First().Split('\t').ToList(); // Assuming tab-separated

                var table = new SourceTable
                {
                    TableName = $"SourceTable_{SourceTables.Count + 1}", // Basic naming
                    Headers = headers
                };

                foreach (var line in lines.Skip(1)) // Skip the header row for data
                {
                    var values = line.Split('\t').ToList();
                    if (values.Count == headers.Count)
                    {
                        var row = new SourceRow();
                        for (int i = 0; i < headers.Count; i++)
                        {
                            row.Values[headers[i]] = values[i];
                        }
                        table.Rows.Add(row);
                    }
                }

                // Calculate basic metadata for each column
                table.ColumnMetadata = headers.Select(header =>
                {
                    var columnValues = table.Rows.Select(r => r.Values.GetValueOrDefault(header)).ToList();
                    return new SourceColumnMetadata
                    {
                        ColumnName = header,
                        Example = columnValues.Take(10).Where(v => v != null).Distinct().Take(5).ToList(), // Get a few distinct non-null examples
                        Rows = columnValues.Count,
                        UniqueCount = columnValues.Distinct().Count(),
                        NullCount = columnValues.Count(v => string.IsNullOrEmpty(v)),
                        SourceSystem = "" // You might want to add UI to capture this per table/column
                    };
                }).ToList();

                SourceTables.Add(table);
            }
        }
    }
}
